{
    "Prints to console": {
        "prefix": "cons",
        "body": [
            "console.log(${1})"
        ],
        "description": ""
    },
    "React Danger": {
        "prefix": "danger",
        "body": [
            "dangerouslySetInnerHTML={{ __html: ${1} }}"
        ]
    },
    "Create React Class": {
        "prefix": "reactClass",
        "body": [
            "import React from 'react'",
            "import PropTypes from 'prop-types'",
            "import classnames from 'classnames'",
            "import styles from './styles.css'",
            "",
            "class ${1:MyComponent} extends React.Component {",
            "    render() {",
            "        const { className, children, ...other } = this.props",
            "",
            "        return (",
            "            <div",
            "                className={classnames(styles.root, className)}",
            "                {...other}",
            "            >",
            "                {children}",
            "            </div>",
            "        )",
            "    }",
            "}",
            "",
            "${1:MyComponent}.propTypes = {",
            "    children: PropTypes.node.isRequired,",
            "    classes: PropTypes.object.isRequired,",
            "    className: PropTypes.string,",
            "}",
            "",
            "${1:MyComponent}.uiName = '${1:MyComponent}'",
            "",
            "export default ${1:MyComponent}",
            ""
        ],
        "description": ""
    },
    "Create React Class JSS": {
        "prefix": "reactClassJSS",
        "body": [
            "import React from 'react'",
            "import PropTypes from 'prop-types'",
            "import classnames from 'classnames'",
            "import withStyles from '../styles/withStyles'",
            "",
            "export const styles = theme => ({",
            "    root: {",
            "",
            "    },",
            "})",
            "",
            "class ${1:MyComponent} extends React.Component {",
            "    render() {",
            "        const { children, classes, className, ...other } = this.props",
            "",
            "        return (",
            "            <div",
            "                className={classnames(classes.root, className)}",
            "                {...other}",
            "            >",
            "                {children}",
            "            </div>",
            "        )",
            "    }",
            "}",
            "",
            "${1:MyComponent}.propTypes = {",
            "    children: PropTypes.node.isRequired,",
            "    classes: PropTypes.object.isRequired,",
            "    className: PropTypes.string,",
            "}",
            "",
            "${1:MyComponent}.uiName = '${1:MyComponent}'",
            "",
            "export default withStyles(styles)(${1:MyComponent})",
            ""
        ],
        "description": ""
    },
    "Create React Stateless": {
        "prefix": "reactStateless",
        "body": [
            "import React from 'react'",
            "import PropTypes from 'prop-types'",
            "import classnames from 'classnames'",
            "import styles from './styles.css'",
            "",
            "const ${1:MyComponent} = props => {",
            "    const { className, children, ...other } = props",
            "",
            "    return (",
            "        <div",
            "            className={classnames(styles.root, className)}",
            "            {...other}",
            "        >",
            "            {children}",
            "        </div>",
            "    )",
            "}",
            "",
            "${1:MyComponent}.propTypes = {",
            "    children: PropTypes.node.isRequired,",
            "    className: PropTypes.string,",
            "}",
            "",
            "${1:MyComponent}.uiName = '${1:MyComponent}'",
            "",
            "export default ${1:MyComponent}",
            ""
        ],
        "description": ""
    },
    "Create React Stateless JSS": {
        "prefix": "reactStatelessJSS",
        "body": [
            "import React from 'react'",
            "import PropTypes from 'prop-types'",
            "import classnames from 'classnames'",
            "import withStyles from '../styles/withStyles'",
            "",
            "export const styles = theme => ({",
            "    root: {",
            "",
            "    },",
            "})",
            "",
            "const ${1:MyComponent} = props => {",
            "    const { children, classes, className, ...other } = props",
            "",
            "    return (",
            "        <div",
            "            className={classnames(classes.root, className)}",
            "            {...other}",
            "        >",
            "            {children}",
            "        </div>",
            "    )",
            "}",
            "",
            "${1:MyComponent}.propTypes = {",
            "    children: PropTypes.node.isRequired,",
            "    classes: PropTypes.object.isRequired,",
            "    className: PropTypes.string,",
            "}",
            "",
            "${1:MyComponent}.uiName = '${1:MyComponent}'",
            "",
            "export default withStyles(styles)(${1:MyComponent})",
            ""
        ],
        "description": ""
    },
    "Create React Story": {
        "prefix": "reactStory",
        "body": [
            "import React from 'react'",
            "import { storiesOf } from '@storybook/react'",
            "import { text, boolean } from '@storybook/addon-knobs'",
            "import ${1:Button} from '.'",
            "",
            "const stories = storiesOf('Components/${1:Button}', module)",
            "",
            "export const Default = () => (",
            "    <${1:Button}",
            "        disabled={boolean('disabled', false)}",
            "    >",
            "        {text('children', 'Just a button')}",
            "    </${1:Button}>",
            ")",
            "",
            "stories.add('Default', Default)",
            "",
            "export default Default",
            ""
        ],
        "description": ""
    }
}
